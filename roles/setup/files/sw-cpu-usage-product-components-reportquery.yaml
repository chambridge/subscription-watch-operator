---
apiVersion: metering.openshift.io/v1alpha1
kind: ReportQuery
metadata:
  labels:
    subscription-watch: "true"
  name: sw-cpu-usage-product-components
spec:
  columns:
    - name: pod
      type: varchar
      unit: kubernetes_pod
    - name: project
      type: varchar
      unit: kubernetes_namespace
    - name: company
      type: varchar
    - name: product
      type: varchar
    - name: component
      type: varchar
    - name: component_type
      type: varchar
    - name: used_cores
      type: double
    - name: interval_start
      type: timestamp
      unit: date
  inputs:
    - name: ReportingStart
      type: time
    - name: ReportingEnd
      type: time
    - default: sw-pod-labels-product
      name: SubscriptionWatchPodLabelsDataSourceName
      type: ReportDataSource
    - default: pod-usage-cpu-cores
      name: PodUsageCpuCoresDataSourceName
      type: ReportDataSource
  query: |
    WITH cte_hourly_pod_max_cpu_core AS (
      SELECT
          C.labels['pod'] as pod,
          C.labels['namespace'] as project,
          max(C.amount) as used_cores,
          date_trunc('hour', C."timestamp") as interval_start
      FROM {| dataSourceTableName .Report.Inputs.PodUsageCpuCoresDataSourceName |} as C
      WHERE C."timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND C."timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
          AND C.dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
          AND C.dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY C.labels['namespace'], C.labels['pod'], date_trunc('hour', C."timestamp")
    ),
    cte_hourly_pod_by_product_label AS (
      SELECT
          L.labels['pod'] as pod,
          L.labels['namespace'] as project,
          'Red Hat' as company,
          L.labels['label_com_redhat_product_name'] as product,
          L.labels['label_com_redhat_component_name'] as component,
          L.labels['label_com_redhat_component_type'] as component_type,
          date_trunc('hour', L."timestamp") as interval_start
      FROM {| dataSourceTableName .Report.Inputs.SubscriptionWatchPodLabelsDataSourceName |} as L
      WHERE L."timestamp" >= timestamp '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prestoTimestamp |}'
          AND L."timestamp" <= timestamp '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prestoTimestamp |}'
          AND L.dt >= '{| default .Report.ReportingStart .Report.Inputs.ReportingStart | prometheusMetricPartitionFormat |}'
          AND L.dt <= '{| default .Report.ReportingEnd .Report.Inputs.ReportingEnd | prometheusMetricPartitionFormat |}'
      GROUP BY L.labels['namespace'], L.labels['pod'], L.labels['label_com_redhat_product_name'], L.labels, date_trunc('hour', L."timestamp")
    ),
    cte_hourly_pod_max_cpu_core_by_label AS (
      SELECT
        C.pod,
        C.project,
        L.company,
        L.product,
        L.component,
        L.component_type,
        C.used_cores,
        C.interval_start
      FROM cte_hourly_pod_max_cpu_core as C
      JOIN cte_hourly_pod_by_product_label as L
        ON C.pod = L.pod
          AND C.project = L.project
          AND C.interval_start = L.interval_start
    )
    SELECT
      pod,
      project,
      company,
      product,
      component,
      component_type,
      used_cores,
      interval_start
    FROM cte_hourly_pod_max_cpu_core_by_label
    ORDER BY interval_start, company, product, component_type, project
