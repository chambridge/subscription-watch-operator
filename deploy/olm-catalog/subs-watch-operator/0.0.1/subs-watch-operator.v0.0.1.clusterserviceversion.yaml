---

apiVersion: operators.coreos.com/v1alpha1
kind: ClusterServiceVersion
metadata:
  annotations:
    alm-examples: |-
      [
        {
          "apiVersion": "subscription-watch-data.openshift.io/v1alpha1",
          "kind": "SubscriptionWatchData",
          "metadata": {
            "name": "subs-watch-data-example"
          },
          "spec": {
            "size": 1
          }
        },
        {
          "apiVersion": "subscription-watch.openshift.io/v1alpha1",
          "kind": "SubscriptionWatch",
          "metadata": {
            "name": "subs-watch-setup"
          },
          "spec": {
            "authentication_secret_name": "auth-secret-name-placeholder",
            "clusterID": "cluster-id-placeholder",
            "reporting_operator_token_name": "reporting-operator-token-placeholder",
            "validate_cert": "false"
          }
        }
      ]
    capabilities: Basic Install
    categories: "Monitoring"
    certified: 'false'
    containerImage: quay.io/chambrid/subscription-watch-operator:latest
    createdAt: 2020-03-26T2:38:59Z
    support: Subscription Watch
    repository: https://github.com/chambridge/subscription-watch-operator
    description: An Ansible-based OpenShift Operator that generates and uploads OpenShift product usage reports to subscription watch
  name: subs-watch-operator.v0.0.1
  namespace: placeholder
spec:
  apiservicedefinitions: {}
  customresourcedefinitions:
    owned:
    - description: Subscription Watch resource
      displayName: SubscriptionWatch
      kind: SubscriptionWatch
      name: SubscriptionWatchs.subscription-watch.openshift.io
      version: v1alpha1
    - description: Subscription Watch Data resource
      displayName: SubscriptionWatchData
      kind: SubscriptionWatchData
      name: subs-watch-data.subscription-watch-data.openshift.io
      version: v1alpha1
    required:
    - description: An instance of Metering with high-level configuration
      displayName: Metering Configuration
      kind: MeteringConfig
      name: meteringconfigs.metering.openshift.io
      version: v1
    - description: A scheduled or on-off Metering Report summarizes data based on
        the query specified.
      displayName: Metering Report
      kind: Report
      name: reports.metering.openshift.io
      version: v1
    - description: A SQL query used by Metering to generate reports.
      displayName: Metering Report Query
      kind: ReportQuery
      name: reportqueries.metering.openshift.io
      version: v1
    - description: Used under-the-hood. A resource representing a database table in
        Presto. Used by ReportQueries to determine what tables exist, and by the HTTP
        API to determine how to query a table.
      displayName: Metering Data Source
      kind: ReportDataSource
      name: reportdatasources.metering.openshift.io
      version: v1
    - description: Represents a configurable storage location for Metering to store
        metering and report data.
      displayName: Metering Storage Location
      kind: StorageLocation
      name: storagelocations.metering.openshift.io
      version: v1
    - description: Used under-the-hood. A resource describing a source of data for
        usage by Report Queries.
      displayName: Metering Presto Table
      kind: PrestoTable
      name: prestotables.metering.openshift.io
      version: v1
    - description: Used under-the-hood. A resource representing a database table in
        Hive.
      displayName: Metering Hive Table
      kind: HiveTable
      name: hivetables.metering.openshift.io
      version: v1
  description: |-

    ## Introduction

    The `subs-watch-operator` is an OpenShift Operator used to obtain OpenShift product usage data and upload it to subscription watch. The Operator utilizes [Ansible](https://www.ansible.com/) and [operator-metering](https://github.com/operator-framework/operator-metering) to create, collect, package, and upload product usage reports to subcription watch.

    ## Features and Capabilities

    The `subs-watch-operator` does two things:
    1. Utilizes operator-metering to create product usage reports specific to suscription watch.
    2. Collects and packages these reports inside of a tarball which gets uploaded to subscription watch through [cloud.redhat.com](https://cloud.redhat.com/).

    ## Configuring the subscription watch operator

    ### Configuring authentication
    An authentication secret must exist inside of the `openshift-metering` project for uploading to [cloud.redhat.com](https://cloud.redhat.com/).
    1. Copy the following into a file called `auth_secret.yaml`:

        ```
        ---

        kind: Secret
        apiVersion: v1
        metadata:
          name: auth-secret-name
          namespace: openshift-metering
          annotations:
            kubernetes.io/service-account.name: subs-watch-operator
        data:
          username: >-
            Y2xvdWQucmVkaGF0LmNvbSB1c2VybmFtZQ==
          password: >-
            Y2xvdWQucmVkaGF0LmNvbSBwYXNzd29yZA==
          token: >-
            Y2xvdWQucmVkaGF0LmNvbSB0b2tlbg==
        ```
    2. Choose a name for your authentication secret and replace the metadata.name with it.
    3. Decide if you are going to use basic authentication or token authentication to upload the product usage reports to subscription watch. The default authentication method is token authentication.
        * To use token authentication, first obtain the correct auth token and then edit the secret to replace the token value by completing the following steps:
            * Install [jq](https://stedolan.github.io/jq/download/)
            * Change to the `openshift-config` namespace:

                ```
                $ oc project openshift-config
                ```

            * Replace the token value with the auth token for cloud.openshift.com. You can obtain the auth token by running the following:

                ```
                $ oc get secret pull-secret -o "jsonpath={.data.\.dockerconfigjson}" | base64 --decode | jq '.auths."cloud.openshift.com".auth'
                ```
        * To use basic authentication, edit the secret to replace the username and password values with your base64 encoded username and password for connecting to cloud.redhat.com.

    4. Deploy the secret to your openshift cluster inside of the `openshift-metering` namespace:

        ```
        $ oc create -f auth-secret.yaml
        ```

    For both methods of authentication, the name of the secret should match the authentication_secret_name set in the SubscriptionWatch custom resource that is configured in the next section.

    ### Configuring `operator-metering`

    The `subs-watch-operator` installs `operator-metering` as a dependency. It utilizes [operator-metering](https://github.com/operator-framework/operator-metering) to create, collect, package, and upload product usage reports to subscription watch. In order for metering to work properly, you must configure it:
    1. Configure `operator-metering` by following the [documentation](https://docs.openshift.com/container-platform/4.3/metering/configuring_metering/metering-about-configuring.html) to create a MeteringConfig resource.

    ### Configuring the `subs-watch-operator`

    Create the SubscriptionWatch and SubscriptionWatchData custom resources to provide the necessary configuration for your Operator. Creating these resources will configure the Operator as well as start the roles that create the resources to obtain the product usage reports. The product usage reports take about an hour to run and are collected, packaged, and uploaded every 6 hours.

    The `subs-watch-operator` requires the `clusterID`, `reporting_operator_token_name`, and `authentication_secret_name` to be specified in a SubscriptionWatch custom resource.

    1. Copy the following SubscriptionWatch resource template and save it to a file called `subs-watch-resource.yaml`:

        ```
        ---

        apiVersion: subscription-watch.openshift.io/v1alpha1
        kind: SubscriptionWatch
        metadata:
          name: subs-watch-setup
        spec:
          clusterID: '123a45b6-cd8e-9101-112f-g131415hi1jk'
          reporting_operator_token_name: 'reporting-operator-token-123ab'
          validate_cert: 'false'
          authentication: 'basic'
          authentication_secret_name: 'basic_auth_creds-123ab'
        ```
    2. Change the following values in your `subs-watch-resource.yaml` file:
        *  Change the `clusterID` value to your cluster ID.
        *  Change the `reporting_operator_token_name` to be the name of the reporting-operator-token secret found inside of the openshift-metering namespace.
        * Change the value of the `authentication_secret_name` to be the name of the authentication secret that you created in the authentication step.
        * Specify the authentication type you are using:
            * If you are using `basic` authentication, specify this under the `authentication` field.
            * If you are using `token` authentication, you can either specify it or remove the authentication field since token authentication is the default.

        For example, if your cluster ID is `123a45b6-cd8e-9101-112f-g131415hi1jk`, your reporting operator token name is `reporting-operator-token-123ab`, you want to use basic auth and the name of your authentication secret is `basic_auth_creds-123ab`, the SubscriptionWatch custom resource should look like the above.
    3. Deploy the SubscriptionWatch resource using the following:

        ```
        $ oc create -f subs-watch-resource.yaml
        ```

    4. In order to start the collection, you must create a SubscriptionWatchData resource. Copy the following SubscriptionWatchData template and save it as `subs-watch-data-resource.yaml`:

        ```
        ---

        apiVersion: subscription-watch-data.openshift.io/v1alpha1
        kind: SubscriptionWatchData
        metadata:
          name: subs-watch-data-example
        ```

    5. Deploy the SubscriptionWatchData resource using the following:

        ```
        4 oc create -f subs-watch-data-resource.yaml
        ```

    Now your `subs-watch-operator` will create, collect, package, and upload your OpenShift product usage reports to subscription watch.
  displayName: Subscription Watch Operator
  icon:
  - base64data: "PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4KPHN2ZyB3aWR0aD0iNTFweCIgaGVpZ2h0PSI1MnB4IiB2aWV3Qm94PSIwIDAgNTEgNTIiIHZlcnNpb249IjEuMSIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayI+CiAgICA8IS0tIEdlbmVyYXRvcjogU2tldGNoIDYzLjEgKDkyNDUyKSAtIGh0dHBzOi8vc2tldGNoLmNvbSAtLT4KICAgIDx0aXRsZT5TdWJzY3JpcHRpb24taWNvbjwvdGl0bGU+CiAgICA8ZGVzYz5DcmVhdGVkIHdpdGggU2tldGNoLjwvZGVzYz4KICAgIDxnIGlkPSJQb3N0LXN1bW1pdC1kYXNoYm9hcmQsLUF1Z3VzdC0xOSIgc3Ryb2tlPSJub25lIiBzdHJva2Utd2lkdGg9IjEiIGZpbGw9Im5vbmUiIGZpbGwtcnVsZT0iZXZlbm9kZCI+CiAgICAgICAgPGcgaWQ9IlJIQ1MtTGFuZGluZy1JY29ucy0yIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtOTY3LjAwMDAwMCwgLTYyMC4wMDAwMDApIiBmaWxsPSIjRUUwMDAwIiBmaWxsLXJ1bGU9Im5vbnplcm8iPgogICAgICAgICAgICA8ZyBpZD0iU3Vic2NyaXB0aW9uLWljb24iIHRyYW5zZm9ybT0idHJhbnNsYXRlKDk2Ny4wMDAwMDAsIDYyMC4wMDAwMDApIj4KICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0zNi42LDE3LjUgTDIyLjUsMzEuOSBMMTcuMSwyNi40IEMxNi40LDI1LjggMTUuNCwyNS44IDE0LjgsMjYuNSBDMTQuMiwyNy4xIDE0LjIsMjguMSAxNC44LDI4LjggTDIxLjMsMzUuNSBDMjEuOSwzNi4yIDIzLDM2LjIgMjMuNiwzNS41IEwzOC45LDE5LjggQzM5LjUsMTkuMSAzOS41LDE4LjEgMzguOCwxNy40IEMzOC4yLDE2LjggMzcuMiwxNi44IDM2LjYsMTcuNSIgaWQ9IkZpbGwtMSI+PC9wYXRoPgogICAgICAgICAgICAgICAgPHBhdGggZD0iTTI1LjgsNC40IEMyOS41LDQuNCAzMyw1LjMgMzYuMSw3IEwzNC41LDcuNCBDMzMuOCw3LjYgMzMuMyw4LjMgMzMuNSw5IEMzMy42LDkuOCAzNC40LDEwLjMgMzUuMiwxMC4xIEw0MC40LDguOSBDNDAuNiw4LjkgNDAuNyw4LjggNDAuOSw4LjcgQzQxLjIsOC41IDQxLjQsOC4yIDQxLjUsNy44IEM0MS41LDcuNiA0MS41LDcuNCA0MS41LDcuMiBMNDAuMywxLjkgQzQwLjEsMS4yIDM5LjQsMC43IDM4LjcsMC45IEMzNy45LDEgMzcuNCwxLjggMzcuNiwyLjYgTDM3LjksNC4xIEMzNC4zLDIuMiAzMC4zLDEuMSAyNiwxLjEgQzEyLDEuMSAwLjYsMTIuNiAwLjYsMjYuOCBDMC42LDMyLjcgMi42LDM4IDUuOSw0Mi40IEw1LjksNDIuNCBMNS45LDQyLjQgQzUuOSw0Mi40IDYsNDIuNSA2LDQyLjUgTDYsNDIuNSBMNiw0Mi41IEM2LjcsNDMuMSA3LjcsNDMuMSA4LjMsNDIuNCBDOC45LDQxLjggOC45LDQwLjggOC4zLDQwLjIgTDgsNDAuMiBMOCw0MC4yIEM1LjIsMzYuNSAzLjYsMzEuOSAzLjYsMjYuOSBDMy42LDE0LjUgMTMuNSw0LjQgMjUuOCw0LjQiIGlkPSJGaWxsLTMiPjwvcGF0aD4KICAgICAgICAgICAgICAgIDxnIGlkPSJHcm91cC03IiB0cmFuc2Zvcm09InRyYW5zbGF0ZSg5LjAwMDAwMCwgOS4wMDAwMDApIj4KICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMzYuOCwxLjUgTDM2LjgsMS41IEwzNi44LDEuNSBDMzYuNywxLjQgMzYuNywxLjQgMzYuOCwxLjUgTDM2LjgsMS41IEwzNi42LDEuMyBDMzUuOSwwLjcgMzQuOSwwLjcgMzQuMywxLjQgQzMzLjcsMiAzMy43LDMgMzQuMywzLjYgTDM0LjQsMy43IEwzNC40LDMuNyBDMzcuMiw3LjQgMzguOSwxMi4xIDM4LjksMTcuMSBDMzguOSwyOS41IDI4LjgsMzkuNiAxNi40LDM5LjYgQzEyLjUsMzkuNiA4LjksMzguNiA1LjcsMzYuOSBMNy41LDM2LjUgQzguMiwzNi4zIDguNywzNS42IDguNSwzNC44IEM4LjQsMzQgNy42LDMzLjUgNi44LDMzLjcgTDEuNSwzNC45IEMxLjMsMzUgMS4yLDM1IDEsMzUuMSBDMC43LDM1LjMgMC41LDM1LjYgMC40LDM2IEMwLjQsMzYuMiAwLjQsMzYuNCAwLjQsMzYuNiBMMS42LDQxLjkgQzEuOCw0Mi42IDIuNSw0My4xIDMuMyw0MyBDNC4xLDQyLjkgNC42LDQyLjEgNC40LDQxLjMgTDQuMSwzOS45IEM3LjcsNDEuOCAxMS44LDQzIDE2LjIsNDMgQzMwLjQsNDMgNDEuOSwzMS41IDQxLjksMTcuMiBDNDIuMSwxMS4zIDQwLjEsNS44IDM2LjgsMS41IiBpZD0iRmlsbC01Ij48L3BhdGg+CiAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgIDwvZz4KICAgICAgICA8L2c+CiAgICA8L2c+Cjwvc3ZnPgo="
    mediatype: "image/svg+xml"
  install:
    spec:
      deployments:
      - name: subs-watch-operator
        spec:
          replicas: 1
          selector:
            matchLabels:
              name: subs-watch-operator
          strategy: {}
          template:
            metadata:
              labels:
                name: subs-watch-operator
            spec:
              containers:
              - command:
                - /usr/local/bin/ao-logs
                - /tmp/ansible-operator/runner
                - stdout
                image: quay.io/chambrid/subscription-watch-operator:latest
                imagePullPolicy: Always
                name: ansible
                resources: {}
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
                  readOnly: true
                - mountPath: /tmp/subs-watch-operator-collect
                  name: subs-watch-operator
              - env:
                - name: WATCH_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['olm.targetNamespaces']
                - name: POD_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.name
                - name: OPERATOR_NAME
                  value: subs-watch-operator
                - name: ANSIBLE_GATHERING
                  value: explicit
                image: quay.io/chambrid/subscription-watch-operator:latest
                imagePullPolicy: Always
                name: operator
                resources: {}
                volumeMounts:
                - mountPath: /tmp/ansible-operator/runner
                  name: runner
                - mountPath: /tmp/subs-watch-operator-collect
                  name: subs-watch-operator
              serviceAccountName: subs-watch-operator
              volumes:
              - emptyDir: {}
                name: runner
              - name: subs-watch-operator
      permissions:
      - rules:
        - apiGroups:
          - ""
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - apps
          resources:
          - deployments
          - daemonsets
          - replicasets
          - statefulsets
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - monitoring.coreos.com
          resources:
          - servicemonitors
          verbs:
          - get
          - create
        - apiGroups:
          - apps
          resourceNames:
          - subs-watch-operator
          resources:
          - deployments/finalizers
          verbs:
          - update
        - apiGroups:
          - ""
          resources:
          - pods
          verbs:
          - get
        - apiGroups:
          - apps
          resources:
          - replicasets
          - deployments
          verbs:
          - get
        - apiGroups:
          - subscription-watch.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - subscription-watch-data.openshift.io
          resources:
          - '*'
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - metering.openshift.io
          resources:
          - pods
          - services
          - services/finalizers
          - endpoints
          - persistentvolumeclaims
          - events
          - configmaps
          - secrets
          - reportdatasources
          - reportqueries
          - reports
          - meteringconfigs
          verbs:
          - create
          - delete
          - get
          - list
          - patch
          - update
          - watch
        - apiGroups:
          - route.openshift.io
          resources:
          - routes
          verbs:
          - list
        serviceAccountName: subs-watch-operator
    strategy: deployment
  installModes:
  - supported: true
    type: OwnNamespace
  - supported: true
    type: SingleNamespace
  - supported: false
    type: MultiNamespace
  - supported: false
    type: AllNamespaces
  maintainers:
  - name: subs-watch
    email: subs-watch@redhat.com
  maturity: alpha
  minKubeVersion: 1.14.6
  provider:
    name: Red Hat
  version: 0.0.1
  links:
  - name: GitHub Repository
    url: https://github.com/chambridge/subscription-watch-operator
  keywords: ['subsription', 'product', 'usage', 'monitor']
